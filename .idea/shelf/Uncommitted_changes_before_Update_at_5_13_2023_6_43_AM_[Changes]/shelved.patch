Index: task/domain/src/main/java/com/alitafreshi/domain/repository/remote/NoteRemoteService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.alitafreshi.domain.repository.remote\r\n\r\nimport com.alitafreshi.constance.Constance.NOTE_FEATURE_BASE_URL\r\nimport com.alitafreshi.domain.model.NoteDto\r\nimport com.alitafreshi.domain.remote.BaseResponse\r\nimport kotlinx.coroutines.flow.Flow\r\nimport retrofit2.http.*\r\n\r\ninterface NoteRemoteService {\r\n\r\n    @GET(\"$NOTE_FEATURE_BASE_URL/noteList/{userId}\")\r\n    suspend fun getNotesByUserId(@Path(\"userId\") userId: Long = 1): Flow<BaseResponse<List<NoteDto>>>\r\n\r\n    @POST(\"$NOTE_FEATURE_BASE_URL/newNote\")\r\n    suspend fun insertNewNote(@Body note: NoteDto): Flow<BaseResponse<NoteDto>>\r\n\r\n    @POST(\"$NOTE_FEATURE_BASE_URL/updateNote/{noteId}\")\r\n    suspend fun updateNote(\r\n        @Path(\"noteId\") noteId: Long,\r\n        @Body note: NoteDto\r\n    ): Flow<BaseResponse<NoteDto>>\r\n\r\n    @DELETE(\"$NOTE_FEATURE_BASE_URL/deleteNote/{noteId}\")\r\n    suspend fun removeNote(@Path(\"noteId\") noteId: Long):Flow<BaseResponse<String>>\r\n\r\n}
===================================================================
diff --git a/task/domain/src/main/java/com/alitafreshi/domain/repository/remote/NoteRemoteService.kt b/task/domain/src/main/java/com/alitafreshi/domain/repository/remote/NoteRemoteService.kt
--- a/task/domain/src/main/java/com/alitafreshi/domain/repository/remote/NoteRemoteService.kt	
+++ b/task/domain/src/main/java/com/alitafreshi/domain/repository/remote/NoteRemoteService.kt	
@@ -4,23 +4,24 @@
 import com.alitafreshi.domain.model.NoteDto
 import com.alitafreshi.domain.remote.BaseResponse
 import kotlinx.coroutines.flow.Flow
+import retrofit2.Response
 import retrofit2.http.*
 
 interface NoteRemoteService {
 
     @GET("$NOTE_FEATURE_BASE_URL/noteList/{userId}")
-    suspend fun getNotesByUserId(@Path("userId") userId: Long = 1): Flow<BaseResponse<List<NoteDto>>>
+    suspend fun getNotesByUserId(@Path("userId") userId: Long = 1): Response<BaseResponse<List<NoteDto>>>
 
     @POST("$NOTE_FEATURE_BASE_URL/newNote")
-    suspend fun insertNewNote(@Body note: NoteDto): Flow<BaseResponse<NoteDto>>
+    suspend fun insertNewNote(@Body note: NoteDto): Response<BaseResponse<NoteDto>>
 
     @POST("$NOTE_FEATURE_BASE_URL/updateNote/{noteId}")
     suspend fun updateNote(
         @Path("noteId") noteId: Long,
         @Body note: NoteDto
-    ): Flow<BaseResponse<NoteDto>>
+    ): Response<BaseResponse<NoteDto>>
 
     @DELETE("$NOTE_FEATURE_BASE_URL/deleteNote/{noteId}")
-    suspend fun removeNote(@Path("noteId") noteId: Long):Flow<BaseResponse<String>>
+    suspend fun removeNote(@Path("noteId") noteId: Long): Response<BaseResponse<String>>
 
 }
\ No newline at end of file
